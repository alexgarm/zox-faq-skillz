{"version":3,"sources":["quesion.tsx"],"names":[],"mappings":";;AAAA,+BAA2C;AAO3C,IAAM,QAAQ,GAAE,UAAC,EAAiB;QAAhB,sBAAQ;;IAChB,IAAA,4BAAqC,EAApC,cAAM,EAAE,iBAA4B,CAAC;IAC5C,OAAO,CACL;QACE,6CAAQ,SAAS,EAAC,UAAU,EAAC,OAAO,EAAE,cAAM,OAAA,SAAS,CAAC,CAAC,MAAM,CAAC,EAAlB,CAAkB,UAC3D,QAAQ,0CAAE,KAAK,CACT;QAER,MAAM,IAAI,CACT,0CAAK,SAAS,EAAC,gBAAgB,UAC7B,QAAQ,0CAAE,MAAM,CACZ,CACP,CACG,CACP,CAAC;AAEN,CAAC,CAAA;AAED,qBAAe,QAAQ,CAAA","file":"quesion.js","sourcesContent":["import React, {FC, useState}  from \"react\";\r\nimport { IQuestion } from \"../types/types\";\r\n\r\ntype Props = {\r\n    question: IQuestion\r\n}\r\n\r\nconst Question =({question}: Props)=> {\r\n    const [opened, setOpened] = useState(false);\r\n    return (\r\n      <div>\r\n        <button className=\"open_btn\" onClick={() => setOpened(!opened)}>\r\n          {question?.title}\r\n        </button>\r\n        \r\n        {opened && (\r\n          <div className=\"answer_section\">\r\n           {question?.answer}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Question"]}